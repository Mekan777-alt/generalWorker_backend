services:

  db:
    image: bitnami/postgresql
    container_name: workers_db
    env_file:
      - .env
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRESQL_MAX_CONNECTIONS=10000
    volumes:
      - postgres_data:/bitnami/postgresql
    networks:
      - workers_network

  redis:
    image: redis:alpine
    container_name: workers_redis
    depends_on:
      - db
    ports:
      - "6379:6379"
    networks:
      - workers_network
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--maxclients", "100000" ]

  api_service:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: workers_api_service
    restart: always
    depends_on:
      - db
      - redis
    command: sh /app/utils/start_api.sh
    ports:
      - "8080:8080"
    networks:
      - workers_network

  notification_service:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: notification
    restart: always
    depends_on:
      - db
      - rabbitmq
      - api_service
    command: sh /app/utils/start_notification.sh
    networks:
      - workers_network

  rabbitmq:
    image: rabbitmq:3.11-management  # Обновлённая версия RabbitMQ
    container_name: workers_rabbitmq
    ports:
      - "5672:5672"      # Основной порт для AMQP
      - "15672:15672"    # Порт для веб-интерфейса управления
    networks:
      - workers_network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: always


networks:
  workers_network:
    driver: bridge

volumes:
  postgres_data:
    name: postgres_data
  redis_data:
    name: redis_data
  rabbitmq_data:
    name: rabbitmq_data