"""add customer and executor profile

Revision ID: e086d9bc7069
Revises: 
Create Date: 2024-11-16 11:34:08.035310

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e086d9bc7069'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('phoneNumber', sa.String(), nullable=False),
    sa.Column('otpCode', sa.String(length=6), nullable=True, comment='Код одноразового пароля для подтверждения авторизации'),
    sa.Column('otpExpiry', sa.DateTime(), nullable=True, comment='Время истечения срока действия OTP'),
    sa.Column('createdAt', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Дата создания записи'),
    sa.Column('updatedAt', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Дата последнего обновления записи'),
    sa.Column('isActive', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period', sa.Enum('ONE_MONTH', 'THREE_MONTHS', 'TWELVE_MONTHS', name='subscriptionperiodenum'), nullable=False),
    sa.Column('price', sa.Numeric(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customer_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(), nullable=True),
    sa.Column('lastName', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('aboutMySelf', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('auth_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['auth_id'], ['auth.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('executor_profile',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(), nullable=True),
    sa.Column('lastName', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('aboutMySelf', sa.String(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('auth_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['auth_id'], ['auth.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('auth_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_use', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['auth_id'], ['auth.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('auth_id', 'role_id')
    )
    op.create_table('user_roles_rating',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('plus', sa.Integer(), nullable=True),
    sa.Column('minus', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.NUMERIC(), nullable=False),
    sa.Column('term_from', sa.DateTime(), nullable=False),
    sa.Column('term_to', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('CREATED', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='tasksstatusenum'), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customer_profile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_responses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('executor_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', name='taskresponsestatusenum'), nullable=False),
    sa.Column('response_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['executor_profile.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_responses')
    op.drop_table('tasks')
    op.drop_table('user_roles_rating')
    op.drop_table('user_roles')
    op.drop_table('executor_profile')
    op.drop_table('customer_profile')
    op.drop_table('subscriptions')
    op.drop_table('roles')
    op.drop_table('auth')
    # ### end Alembic commands ###
